package Lab05;

public class Main {
	// método genérico imprimirArreglo
	public static < E > void imprimirArreglo(E[] arregloEntrada, int subindiceInferior, int subindiceSuperior) throws InvalidSubscriptException {
		if (subindiceInferior > (arregloEntrada.length - 1) || subindiceSuperior > (arregloEntrada.length - 1) 
				|| subindiceInferior < -1 * (arregloEntrada.length) || subindiceSuperior < -1 * (arregloEntrada.length)
				|| subindiceInferior > subindiceSuperior) {
			throw new InvalidSubscriptException("Los índices están fuera del límite del arreglo.");
		}
		// muestra los elementos del arreglo
		for (int i = subindiceInferior; i < subindiceSuperior; i++) {
			System.out.printf("%s ", arregloEntrada[i]);
		} // fin del método imprimirArreglo
	}
		
	public static void main(String args[]) {
	// crea arreglos de objetos Integer, Double y Character
		Integer[] arregloInteger = { 1, 2, 3, 4, 5, 6 };
		Double[] arregloDouble = { 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7 };
		Character[] arregloCharacter = { 'H', 'O', 'L', 'A' };
		try {
			System.out.println( "El arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloInteger, 2, 4);
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloInteger, 4, 1);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloInteger, 6, 8);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloInteger, -7, -9);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "El arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloDouble, 1, 5);
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloDouble, 4, 1);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloDouble, 6, 8);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloDouble, -8, -10);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "El arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloCharacter, 1, 3);
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloCharacter, 2, 1);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloCharacter, 4, 6);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		try {
			System.out.println( "\nEl arreglo arregloInteger contiene:" );
			imprimirArreglo(arregloCharacter, -5, -6);
		} catch (InvalidSubscriptException e) {
			System.out.println(e);
		}
		// fin de main
	} // fin de la clase PruebaMetodoGenerico
}
