package Prop5;
import java.util.regex.Pattern;

public class Contacto {
    private String nombre;
    private String email;
    private Direccion direccion;
    private Telefono telefono;

    private static final Pattern EMAIL_PATTERN = Pattern.compile(
        "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$"
    );

    public Contacto(String nombre, String email, Direccion direccion, Telefono telefono) {
        setNombre(nombre);
        setEmail(email);
        setDireccion(direccion);
        setTelefono(telefono);
    }

    public String getNombre() { return nombre; }
    
    public void setNombre(String nombre) {
        if (nombre == null || nombre.trim().isEmpty()) {
            throw new IllegalArgumentException("El nombre no puede ser nulo o vacío.");
        }
        this.nombre = nombre.trim();
    }

    public String getEmail() { return email; }
    
    public void setEmail(String email) {
        if (email == null || email.trim().isEmpty()) {
            throw new IllegalArgumentException("El email no puede ser nulo o vacío.");
        }
        if (!EMAIL_PATTERN.matcher(email.trim()).matches()) {
            throw new IllegalArgumentException("Formato de email no válido.");
        }
        this.email = email.trim();
    }

    public Direccion getDireccion() { return direccion; }
    
    public void setDireccion(Direccion direccion) { 
        if (direccion == null) {
            throw new IllegalArgumentException("La dirección no puede ser nula.");
        }
        this.direccion = direccion; 
    }

    public Telefono getTelefono() { return telefono; }
    
    public void setTelefono(Telefono telefono) { 
        if (telefono == null) {
            throw new IllegalArgumentException("El teléfono no puede ser nulo.");
        }
        this.telefono = telefono; 
    }

    @Override
    public String toString() {
        return "Nombre: " + nombre + ", Email: " + email + ", Dirección: " + direccion + ", Teléfono: " + telefono.getNumero();
    }
}
