package Act4;
import java.util.ArrayList;
import java.util.List;

public class CuentaBancaria {
    private String numeroCuenta;
    private String titular;
    protected double saldo;
    protected List<String> historialTransacciones;

    public CuentaBancaria(String numeroCuenta, String titular, double saldo) {
        if (saldo < 0) {
            throw new IllegalArgumentException("El saldo inicial no puede ser negativo.");
        }
        this.numeroCuenta = numeroCuenta;
        this.titular = titular;
        this.saldo = saldo;
        this.historialTransacciones = new ArrayList<>();  // Inicializamos el historial
    }

    public String getNumeroCuenta() {
        return numeroCuenta;
    }

    public String getTitular() {
        return titular;
    }

    public double getSaldo() {
        return saldo;
    }
    
    public List<String> getHistorialTransacciones() {
    	return historialTransacciones;
    }

    public void depositar(double monto) {
        if (monto <= 0) {
            throw new IllegalArgumentException("El monto debe ser mayor que cero.");
        }
        saldo += monto;
        historialTransacciones.add("Depósito: " + monto);
    }

    public void retirar(double monto) throws SaldoInsuficienteException {
        if (monto <= 0) {
            throw new IllegalArgumentException("El monto debe ser mayor que cero.");
        }
        if (monto > saldo) {
            throw new SaldoInsuficienteException("Saldo insuficiente para realizar el retiro.");
        }
        saldo -= monto;
    }


    public void transferir(CuentaBancaria destino, double monto) 
            throws SaldoInsuficienteException, CuentaNoEncontradaException {
        if (destino == null) {
            throw new CuentaNoEncontradaException("Cuenta destino no encontrada.");
        }
        retirar(monto); // Puede lanzar SaldoInsuficienteException
        destino.depositar(monto);
    }


    public void cerrarCuenta() throws SaldoNoCeroException {
        if (saldo != 0) {
            throw new SaldoNoCeroException("La cuenta no se puede cerrar, el saldo no es cero.");
        }
        historialTransacciones.add("Cuenta cerrada.");
    }

    // Método para generar un reporte de transacciones
    public void generarReporteTransacciones() throws HistorialVacioException {
        if (historialTransacciones.isEmpty()) {
            throw new HistorialVacioException("No hay transacciones para mostrar.");
        }
        System.out.println("--- Historial de Transacciones ---");
        for (String transaccion : historialTransacciones) {
            System.out.println(transaccion);
        }
    }
}
