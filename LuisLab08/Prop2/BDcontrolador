public class BDcontrolador {
	private BDmodelo modelo;
	private BDvista vista;
	
	public BDcontrolador(BDmodelo modelo, BDvista vista) {
		this.modelo = modelo;
		this.vista = vista;
	}
	//Método para crear las TABLAS
	public void crearTablas() {
		modelo.crearTablas();
		vista.mostrarMensaje("Se crearon las tablas en la base de datos.");
	}
	//Métodos TABLA usuarios
	public void insertarUsuario(String nombre, String contrasenia) {
		if(nombre.isEmpty() || contrasenia.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(nombre, contrasenia)) {
				vista.mostrarMensaje("El usuario ya existe.");
			} else {
				modelo.insertarUsuario(nombre, contrasenia);
				vista.mostrarMensaje("Usuario agregado con éxito.");
			}
		}
	}
	public void actualizarUsuario(int id_usuario, String nombre, String contrasenia) {
		if(id_usuario <= 0 || nombre.isEmpty() || contrasenia.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(id_usuario)) {
				modelo.actualizarUsuario(id_usuario, nombre, contrasenia);
				vista.mostrarMensaje("Usuario actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el usuario.");
			}
		}
	}
	public void mostrarUsuario(int id_usuario) {
		if(id_usuario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(id_usuario)) {
				modelo.mostrarUsuario(id_usuario);
			} else {
				vista.mostrarMensaje("No se encontró el usuario.");
			}
		}
	}
	public void mostrarUsuario() {
		modelo.mostrarUsuario();
	}
	public void borrarUsuario(int id_usuario) {
		if(id_usuario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(id_usuario)) {
				modelo.borrarUsuario(id_usuario);
				vista.mostrarMensaje("Usuario eliminado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el usuario.");
			}
		}
	}
	//Métodos TABLA personajes
	public void insertarPersonaje(String nombre, int vida, int ataque, int defensa, int alcance, int id_inventario) {
		if(nombre.isEmpty() || vida <= 0 || ataque <= 0 || defensa <= 0 || alcance <= 0 || id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(nombre, vida, ataque, defensa, alcance, id_inventario)) {
				modelo.insertarPersonaje(nombre, vida, ataque, defensa, alcance, id_inventario);
				vista.mostrarMensaje("Personaje agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}
		}
	}
	public void actualizarPersonaje(int id_personaje, String nombre, int vida, int ataque, int defensa, int alcance, int id_inventario) {
		if(id_personaje <= 0 || nombre.isEmpty() || vida <= 0 || ataque <= 0 || defensa <= 0 || alcance <= 0 || id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(id_personaje)) {
				modelo.actualizarPersonaje(id_personaje, nombre, vida, ataque, defensa, alcance, id_inventario);
				vista.mostrarMensaje("Personaje actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}
		}
	}
	public void mostrarPersonaje(int id_personaje) {
		if(id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(id_personaje)) {
				modelo.mostrarPersonaje(id_personaje);
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}
		}
	}
	public void mostrarPersonaje() {
		modelo.mostrarPersonaje();
	}
	public void borrarPersonaje(int id_personaje) {
		if(id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(id_personaje)) {
				modelo.borrarPersonaje(id_personaje);
				vista.mostrarMensaje("Personaje eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}	
		}
	}
	//Métodos TABLA enemigos
	public void insertarEnemigo(String nombre, int vida, int ataque, String tipo) {
		if(nombre.isEmpty() || vida <= 0 || ataque <= 0 || tipo.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(nombre, vida, ataque, tipo)) {
				modelo.insertarEnemigo(nombre, vida, ataque, tipo);
				vista.mostrarMensaje("Enemigo agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}		
	}
	public void actualizarEnemigo(int id_enemigo, String nombre, int vida, int ataque, String tipo) {
		if(id_enemigo <= 0 || nombre.isEmpty() || vida <= 0 || ataque <= 0 || tipo.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(id_enemigo)) {
				modelo.actualizarEnemigo(id_enemigo, nombre, vida, ataque, tipo);
				vista.mostrarMensaje("Enemigo actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}
	}
	public void mostrarEnemigo(int id_enemigo) {
		if(id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(id_enemigo)) {
				modelo.mostrarEnemigo(id_enemigo);
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}
	}
	public void mostrarEnemigo() {
		modelo.mostrarEnemigo();
	}
	public void borrarEnemigo(int id_enemigo) {
		if(id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(id_enemigo)) {
				modelo.borrarEnemigo(id_enemigo);
				vista.mostrarMensaje("Enemigo eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}
	}
	//Métodos TABLA items
	public void insertarItem(String nombre, String tipo, String descripcion, int cantidad) {
		if(nombre.isEmpty() || tipo.isEmpty() || descripcion.isEmpty() || cantidad <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(nombre, tipo, descripcion, cantidad)) {
				modelo.insertarItem(nombre, tipo, descripcion, cantidad);
				vista.mostrarMensaje("Item agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}			
	}
	public void actualizarItem(int id_item, String nombre, String tipo, String descripcion, int cantidad) {
		if(id_item <= 0 || nombre.isEmpty() || tipo.isEmpty() || descripcion.isEmpty() || cantidad <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(id_item)) {
				modelo.actualizarItem(id_item, nombre, tipo, descripcion, cantidad);
				vista.mostrarMensaje("Item actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}
	}
	public void mostrarItem(int id_item) {
		if(id_item <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(id_item)) {
				modelo.mostrarItem(id_item);
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}
	}
	public void mostrarItem() {
		modelo.mostrarItem();
	}
	public void borrarItem(int id_item) {
		if(id_item <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(id_item)) {
				modelo.borrarItem(id_item);
				vista.mostrarMensaje("Item eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}
	}
	//Métodos TABLA inventarios
	public void insertarInventario(int id_personaje) {
		if(id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarInventario(id_personaje)) {
				modelo.insertarInventario(id_personaje);
				vista.mostrarMensaje("Inventario agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el inventario.");
			}
		}
	}
	public void actualizarInventario(int id_inventario, int id_personaje) {
		if(id_inventario <= 0 || id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarInventario(id_personaje)) {
				modelo.actualizarInventario(id_inventario, id_personaje);
				vista.mostrarMensaje("Inventario actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el inventario.");
			}
		}
	}
	public void mostrarInventario(int id_inventario) {
		if(id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			modelo.mostrarInventario(id_inventario);
		}
	}
	public void mostrarInventario() {
		modelo.mostrarInventario();
	}
	public void borrarInventario(int id_inventario) {
		if(id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			modelo.borrarInventario(id_inventario);
			vista.mostrarMensaje("Inventario eliminado con éxito");
		}
	} 
	//Métodos TABLA combates
	public void insertarCombate(String resultado, int id_personaje, int id_enemigo) {
		if(resultado.isEmpty() || id_personaje <= 0 || id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(resultado, id_personaje, id_enemigo)) {
				modelo.insertarCombate(resultado, id_personaje, id_enemigo);
				vista.mostrarMensaje("Combate agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	public void actualizarCombate(int id_combate, String resultado, int id_personaje, int id_enemigo) {
		if(id_combate <= 0 || resultado.isEmpty() || id_personaje <= 0 || id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(id_combate)) {
				modelo.actualizarCombate(id_combate, resultado, id_personaje, id_enemigo);
				vista.mostrarMensaje("Combate actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	public void mostrarCombate(int id_combate) {
		if(id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(id_combate)) {
				modelo.mostrarCombate(id_combate);
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	public void mostrarCombate() {
		modelo.mostrarCombate();
	}
	public void borrarCombate(int id_combate) {
		if(id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(id_combate)) {
				modelo.borrarCombate(id_combate);
				vista.mostrarMensaje("Combate eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	//Métodos TABLA turnos
	public void insertarTurno(String descripcion, int id_combate) {
		if(descripcion.isEmpty() || id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(descripcion, id_combate)) {
				modelo.insertarTurno(descripcion, id_combate);
				vista.mostrarMensaje("Turno agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}	
		}	
	}
	public void actualizarTurno(int id_turno, String descripcion, int id_combate) {
		if(id_turno <= 0 || descripcion.isEmpty() || id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(id_turno)) {
				modelo.actualizarTurno(id_turno, descripcion, id_combate);
				vista.mostrarMensaje("Turno actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}
		}
	}
	public void mostrarTurno(int id_turno) {
		if(id_turno <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(id_turno)) {
				modelo.mostrarTurno(id_turno);
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}
		}
	}
	public void mostrarTurno() {
		modelo.mostrarTurno();
	}
	public void borrarTurno(int id_turno) {
		if(id_turno <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(id_turno)) {
				modelo.borrarTurno(id_turno);
				vista.mostrarMensaje("Turno eliminado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}
		}
	}
	//Método para iniciar el programa
	public void menuInicio() {
		String opc1, opc2, opc3;
		crearTablas();
		do {
			vista.menuLogin();
			opc1 = vista.solicitarOpcion();
			switch(opc1) {
			case "1": {
				vista.mostrarMensaje("\nIngrese nombre y contraseña: ");
				String nombre = vista.solicitarString();
				String contrasenia = vista.solicitarString();
				insertarUsuario(nombre, contrasenia);
				break;
			}
			case "2": {
				vista.mostrarMensaje("\nIngrese nombre y contraseña: ");
				String nombreUsuario = vista.solicitarString();
				String contraseniaUsuario = vista.solicitarString();
				boolean existe = modelo.buscarUsuario(nombreUsuario, contraseniaUsuario);
				if(existe) {
					do {
						vista.menuCRUD();
						opc2 = vista.solicitarOpcion();
						switch(opc2) {
						case "1": {
							vista.mostrarMensaje("\n¿En qué tabla desea insertar un registro?");
							do {
								vista.menuTablas();
								opc3 = vista.solicitarOpcion();
								switch(opc3) {
								case "1": {
									vista.mostrarMensaje("\nIngrese nombre/vida/ataque/defensa/alcance/id_inventario: ");
									String nombrePersonaje = vista.solicitarString();
									int vida = vista.solicitarInt();
									int ataque = vista.solicitarInt();
									int defensa = vista.solicitarInt();
									int alcance = vista.solicitarInt();
									int id_inventario = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									insertarPersonaje(nombrePersonaje,vida,ataque,defensa,alcance,id_inventario);
									break;
								}
								case "2": {
									vista.mostrarMensaje("\nIngrese nombre/vida/ataque/tipo: ");
									String nombreEnemigo = vista.solicitarString();
									int vida = vista.solicitarInt();
									int ataque = vista.solicitarInt();
									String tipo = vista.solicitarString();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									insertarEnemigo(nombreEnemigo,vida,ataque,tipo);
									break;
								}
								case "3": {
									vista.mostrarMensaje("\nIngrese id_personaje: ");
									int id_personaje = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									insertarInventario(id_personaje);
									break;
								}
								case "4": {
									vista.mostrarMensaje("\nIngrese nombre/tipo/descripcion/cantidad: ");
									String nombreItem = vista.solicitarString();
									String tipo = vista.solicitarString();
									String descripcion = vista.solicitarString();
									int cantidad = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									insertarItem(nombreItem,tipo,descripcion,cantidad);
									break;
								}
								case "5": {
									vista.mostrarMensaje("\nIngrese resultado/id_personaje/id_enemigo: ");
									String resultado = vista.solicitarString();
									int id_personaje = vista.solicitarInt();
									int id_enemigo = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									insertarCombate(resultado,id_personaje,id_enemigo);
									break;
								}
								case "6": {
									vista.mostrarMensaje("\nIngrese descripcion/id_combate: ");
									String descripcion = vista.solicitarString();
									int id_combate = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									insertarTurno(descripcion,id_combate);
									break;
								}
								case "7":
									break;
								default:
									vista.mostrarMensaje("\nOpción no válida. Intente de nuevo");
									break;
								}
							} while(!opc3.equals("7"));
							break;
						}
						case "2": {
							vista.mostrarMensaje("\n¿En qué tabla desea actualizar un registro?");
							do {
								vista.menuTablas();
								opc3 = vista.solicitarOpcion();
								switch(opc3) {
								case "1": {
									mostrarPersonaje();
									vista.mostrarMensaje("\nIngrese id_personaje/nombre/vida/ataque/defensa/alcance/id_inventario: ");
									int id_personaje = vista.solicitarInt();
									String nombrePersonaje = vista.solicitarString();
									int vida = vista.solicitarInt();
									int ataque = vista.solicitarInt();
									int defensa = vista.solicitarInt();
									int alcance = vista.solicitarInt();
									int id_inventario = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									actualizarPersonaje(id_personaje,nombrePersonaje,vida,ataque,defensa,alcance,id_inventario);
									break;
								}
								case "2": {
									mostrarEnemigo();
									vista.mostrarMensaje("\nIngrese id_enemigo/nombre/vida/ataque/tipo: ");
									int id_enemigo = vista.solicitarInt();
									String nombreEnemigo = vista.solicitarString();
									int vida = vista.solicitarInt();
									int ataque = vista.solicitarInt();
									String tipo = vista.solicitarString();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									actualizarEnemigo(id_enemigo,nombreEnemigo,vida,ataque,tipo);
									break;
								}
								case "3": {
									mostrarInventario();
									vista.mostrarMensaje("\nIngrese id_inventario/id_personaje: ");
									int id_inventario = vista.solicitarInt();
									int id_personaje = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									actualizarInventario(id_inventario,id_personaje);
									break;
								}
								case "4": {
									mostrarItem();
									vista.mostrarMensaje("\nIngrese id_item/nombre/tipo/descripcion/cantidad: ");
									int id_item = vista.solicitarInt();
									String nombreItem = vista.solicitarString();
									String tipo = vista.solicitarString();
									String descripcion = vista.solicitarString();
									int cantidad = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									actualizarItem(id_item,nombreItem,tipo,descripcion,cantidad);
									break;
								}
								case "5": {
									mostrarCombate();
									vista.mostrarMensaje("\nIngrese id_combate/resultado/id_personaje/id_enemigo: ");
									int id_combate = vista.solicitarInt();
									String resultado = vista.solicitarString();
									int id_personaje = vista.solicitarInt();
									int id_enemigo = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									actualizarCombate(id_combate,resultado,id_personaje,id_enemigo);
									break;
								}
								case "6": {
									mostrarTurno();
									vista.mostrarMensaje("\nIngrese id_turno/descripcion/id_combate: ");
									int id_turno = vista.solicitarInt();
									String descripcion = vista.solicitarString();
									int id_combate = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									actualizarTurno(id_turno,descripcion,id_combate);
									break;
								}
								case "7":
									break;
								default:
									vista.mostrarMensaje("\nOpción no válida. Intente de nuevo");
									break;
								}
							} while(!opc3.equals("7"));
							break;
						}
						case "3": {
							vista.mostrarMensaje("\n¿De qué tabla desea mostrar un registro?");
							do {
								vista.menuTablas();
								opc3 = vista.solicitarOpcion();
								switch(opc3) {
								case "1": {
									mostrarPersonaje();
									vista.mostrarMensaje("\nIngrese id_personaje: ");
									int id_personaje = vista.solicitarInt();
									mostrarPersonaje(id_personaje);
									break;
								}
								case "2": {
									mostrarEnemigo();
									vista.mostrarMensaje("\nIngrese id_enemigo: ");
									int id_enemigo = vista.solicitarInt();
									mostrarEnemigo(id_enemigo);
									break;
								}
								case "3": {
									mostrarInventario();
									vista.mostrarMensaje("\nIngrese id_inventario: ");
									int id_inventario = vista.solicitarInt();
									mostrarInventario(id_inventario);
									break;
								}
								case "4": {
									mostrarItem();
									vista.mostrarMensaje("\nIngrese id_item: ");
									int id_item = vista.solicitarInt();
									mostrarItem(id_item);
									break;
								}
								case "5": {
									mostrarCombate();
									vista.mostrarMensaje("\nIngrese id_combate: ");
									int id_combate = vista.solicitarInt();
									mostrarCombate(id_combate);
									break;
								}
								case "6": {
									mostrarTurno();
									vista.mostrarMensaje("\nIngrese id_turno: ");
									int id_turno = vista.solicitarInt();
									mostrarTurno(id_turno);
									break;
								}
								case "7":
									break;
								default:
									vista.mostrarMensaje("\nOpción no válida. Intente de nuevo");
									break;
								}
							} while(!opc3.equals("7"));
							break;
						}
						case "4": {
							vista.mostrarMensaje("\n¿En qué tabla desea borrar un registro?");
							do {
								vista.menuTablas();
								opc3 = vista.solicitarOpcion();
								switch(opc3) {
								case "1": {
									mostrarPersonaje();
									vista.mostrarMensaje("\nIngrese id_personaje: ");
									int id_personaje = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									borrarPersonaje(id_personaje);
									break;
								}
								case "2": {
									mostrarEnemigo();
									vista.mostrarMensaje("\nIngrese id_enemigo: ");
									int id_enemigo = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									borrarEnemigo(id_enemigo);
									break;
								}
								case "3": {
									mostrarInventario();
									vista.mostrarMensaje("\nIngrese id_inventario: ");
									int id_inventario = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									borrarInventario(id_inventario);
									break;
								}
								case "4": {
									mostrarItem();
									vista.mostrarMensaje("\nIngrese id_item: ");
									int id_item = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									borrarItem(id_item);
									break;
								}
								case "5": {
									mostrarCombate();
									vista.mostrarMensaje("\nIngrese id_combate: ");
									int id_combate = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									borrarCombate(id_combate);
									break;
								}
								case "6": {
									mostrarTurno();
									vista.mostrarMensaje("\nIngrese id_turno: ");
									int id_turno = vista.solicitarInt();
									vista.mostrarMensaje("\nIngresa tu contraseña para confirmar: ");
									String contrasenia = vista.solicitarString();
									while(contraseniaUsuario != contrasenia) {
										vista.mostrarMensaje("\nContraseña incorrecta. Intenta de nuevo.");
										contrasenia = vista.solicitarString();
									}
									borrarTurno(id_turno);
									break;
								}
								case "7":
									break;
								default:
									vista.mostrarMensaje("\nOpción no válida. Intente de nuevo");
									break;
								}
							} while(!opc3.equals("7"));
							break;
						}
						case "5":
							break;
						default:
							vista.mostrarMensaje("\nOpción no válida. Intente de nuevo");
							break;
						}
					} while(!opc2.equals("5"));
				} else {
					vista.mostrarMensaje("\nUsuario o contrasenia incorrectos.");
				}
				break;
			}
			case "3": {
				mostrarUsuario();
				vista.mostrarMensaje("\nIngrese el id del usuario que desea actualizar: ");
				int id_usuario = vista.solicitarInt();
				vista.mostrarMensaje("\nIngrese el nuevo nombre del usuario: ");
				String nombre = vista.solicitarString();
				vista.mostrarMensaje("\nIngrese la nueva contraseña del usuario: ");
				String contrasenia = vista.solicitarString();
				actualizarUsuario(id_usuario, nombre, contrasenia);
				break;
			}
			case "4": {
				mostrarUsuario();
				vista.mostrarMensaje("\nIngrese el id del usuario que desea ver: ");
				int id_usuario = vista.solicitarInt();
				mostrarUsuario(id_usuario);
				break;
			}
			case "5": {
				mostrarUsuario();
				vista.mostrarMensaje("\nIngrese el id del usuario que desea borrar: ");
				int id_usuario = vista.solicitarInt();
				borrarUsuario(id_usuario);
				break;
			}
			case "6":
				break;
			default:
				vista.mostrarMensaje("\nOpción no válida. Intente de nuevo");
				break;
			}
		} while(!opc1.equals("6"));
	vista.cerrarScanner();
	}
}
