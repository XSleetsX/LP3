public class CombateModelo {
    private BaseDeDatos bd;
	private int turno;

    public CombateModelo() {
        this.bd = new BaseDeDatos();
    	this.turno = 1;
    }

    public void buscarCombate(int id_combate) {
    	bd.buscarCombate(id_combate);
    }
    public void insertarCombate(String resultado, Personaje personaje, Enemigo enemigo) {
    	bd.insertarCombate(resultado, personaje.getIdPersonaje(), enemigo.getIdEnemigo());
    }
    public void mostrarCombate() {
    	bd.mostrarCombate();
    }
    public void borrarCombate(int id_combate) {
    	bd.borrarCombate(id_combate);
    }
    
    public void insertarTurno(String descripcion, int id_combate) {
    	bd.insertarTurno(descripcion, id_combate);
    }
    public void mostrarTurno() {
    	bd.mostrarTurno();
    }
    public void borrarTurno(int id_turno) {
    	bd.borrarTurno(id_turno);
    }
    
    public int getTurno() { return turno; }
    public void pasarTurno() { this.turno++; }

    public int accionEnemigo(Personaje personaje, Enemigo enemigo) {
        int numero = (int) (Math.random() * 2) + 1;
        if(numero == 1) {
        	personaje.recibirDanio(enemigo.atacar());
            return 1;
        } else {
            if(enemigo.getVida() >= 100) {
            	personaje.recibirDanio(enemigo.atacar());
                return 1;
            } else {
                enemigo.curarVida(15);
                return 2;
            }
        }
    }
    public void atacarEnemigo(Personaje personaje, Enemigo enemigo) {
        enemigo.recibirDanio(personaje.atacar());
    }
    public boolean verificarSaludJugador(Personaje personaje) {
        if(personaje.getVida() <= 0) {
            return false;
        } else {
            return true;
        }
    }
    public boolean verificarSaludEnemigo(Enemigo enemigo) {
        if(enemigo.getVida() <= 0) {
            return false;
        } else {
            return true;
        }
    }
}
