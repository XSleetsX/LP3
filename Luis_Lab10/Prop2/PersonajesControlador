import java.util.List;

public class PersonajesControlador {
	private PersonajesModelo modelo;
	private PersonajesVista vista;
	
	public PersonajesControlador(PersonajesModelo modelo, PersonajesVista vista) {
		this.modelo = modelo;
		this.vista = vista;
	}
	public Personaje buscarPersonaje(String nombre) {
		Personaje personaje = modelo.buscarPersonaje(nombre);
		if(personaje == null) {
			return null;
		} else {
			return personaje;
		}
	}
	public void agregarPersonaje(String nombre) {
		if(nombre.isEmpty()) {
			vista.mostrarMensaje("Debe llenar el nombre del personaje.");
		} else {
			Personaje personaje = buscarPersonaje(nombre);
			if(personaje == null) {
				switch(nombre) {
					case "Caballero": {
						modelo.agregarPersonaje(new Caballero());
						vista.mostrarMensaje("Caballero creado.");
						break;
					}
					case "Guerrero": {
						modelo.agregarPersonaje(new Guerrero());
						vista.mostrarMensaje("Guerrero creado.");
						break;
					}
					case "Arquero": {
						modelo.agregarPersonaje(new Arquero());
						vista.mostrarMensaje("Arquero creado.");
						break;
					}
				}
			} else {
				vista.mostrarMensaje("Ya tienes un " + nombre + " como personaje.");
			}
		}
	}
	public void eliminarPersonaje(String nombre) {
		if(nombre.isEmpty()) {
			vista.mostrarMensaje("Debe llenar el nombre del personaje.");
		} else {
			Personaje personaje = buscarPersonaje(nombre);
			if(personaje == null) {
				vista.mostrarMensaje("No se encontró " + nombre);
			} else {
				modelo.eliminarPersonaje(personaje);
				vista.mostrarMensaje("Se eliminó " + nombre + " exitosamente.");
			}
			
		}
	}
	public void listarPersonajes() {
		List<Personaje> personajes = modelo.getPersonajes();
		vista.listarPersonajes(personajes);
	}
	public void guardarArchivo() {
		boolean guardado = modelo.guardarPersonajes();
		if(guardado) {
			vista.mostrarMensaje("Se guardaron los personajes exitosamente.");
		} else {
			vista.mostrarMensaje("Hubo un probelma al guardar el archivo de persoanjes.");
		}
	}
	public void cargarArchivo() {
		boolean cargado = modelo.cargarPersonajes();
		if(cargado) {
			vista.mostrarMensaje("Se cargaron los personajes.");
		} else {
			vista.mostrarMensaje("Hubo un problema al cargar el archivo de personajes.");
		}
	}
	
	public void inicio() {
		String opcion1, opcion2;
		cargarArchivo();
		do{
			vista.menuInicio();
			opcion1 = vista.solicitarOpcion();
			switch(opcion1) {
				case "1": {
					do {
						vista.opcionesPersonajes();
						opcion2 = vista.solicitarOpcion();
						switch(opcion2) {
							case "1": {
								agregarPersonaje("Caballero");
								break;
							}
							case "2": {
								agregarPersonaje("Guerrero");
								break;
							}
							case "3": {
								agregarPersonaje("Arquero");
								break;
							}
							case "4": {
								break;
							}
							default: {
								vista.mostrarMensaje("Opción no válida. Intenta de nuevo.");
								break;
							}
						}
					} while (!opcion2.equals("4"));
					break;
				}
				case "2": {
					if(modelo.getPersonajes().isEmpty()) {
						vista.mostrarMensaje("Debes crear un personaje primero.");
						break;
					} else {
						listarPersonajes();
						String nombre = vista.solicitarNombre();
						Personaje personaje = buscarPersonaje(nombre);
						if(personaje == null) {
							vista.mostrarMensaje("El personaje no existe.");
						} else {
							switch(nombre) {
								case "Caballero": {
									vista.mostrarMensaje("Elegiste al Caballero.");
									new CombateControlador(new CombateModelo(), new CombateVista()).iniciarCombate(personaje);
									break;
								}
								case "Guerrero": {
									vista.mostrarMensaje("Elegiste al Guerrero.");
									new CombateControlador(new CombateModelo(), new CombateVista()).iniciarCombate(personaje);
									break;
								}
								case "Arquero": {
									vista.mostrarMensaje("Elegiste al Arquero.");
									new CombateControlador(new CombateModelo(), new CombateVista()).iniciarCombate(personaje);
									break;
								}
							}
						}
					}
				}
				case "3": {
					String nombre = vista.solicitarNombre();
					eliminarPersonaje(nombre);
					break;
				}
				case "4": {
					vista.mostrarMensaje("Saliendo...");
					break;
				}
				default: {
					vista.mostrarMensaje("Opción no válida. Intenta de nuevo.");
					break;
				}
			}
		} while (!opcion1.equals("4"));
		guardarArchivo();
	}
}
