import java.util.List;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

public class PersonajesModelo {  
	private BaseDeDatos bd;
    
    public PersonajesModelo() {
        this.bd = new BaseDeDatos();
    } 
    
    public Personaje buscarPersonaje(int id_personaje) {
        return bd.buscarPersonaje(id_personaje);
    }
    public void insertarPersonaje(Personaje personaje) {
        bd.insertarPersonaje(personaje.getNombre(), personaje.getVida(), personaje.getMana(), personaje.getAtaque(), personaje.getDefensa(), personaje.getInteligencia(), personaje.getNivel());
    }
    public void actualizarPersonaje(Personaje personaje) {
    	bd.actualizarPersonaje(personaje.getIdPersonaje(), personaje.getVida(), 
    							personaje.getMana(), personaje.getAtaque(), 
    							personaje.getDefensa(), personaje.getInteligencia(), 
    							personaje.getNivel());
    }
    public void borrarPersonaje(int id_personaje) {
    	bd.borrarPersonaje(id_personaje);
    }
    public BaseDeDatos getBaseDeDatos() {
    	return bd;
    }
    
    public void insertarInventario(int id_personaje) {
		bd.insertarInventario(id_personaje);
	}
	public void actualizarInventario(int id_inventario, int id_personaje) {
		bd.actualizarInventario(id_inventario, id_personaje);
	}
	public void mostrarInventario() {
		bd.mostrarInventario();
	}
	public void borrarInventario(int id_inventario) {
		bd.borrarInventario(id_inventario);
	} 
    /*public boolean guardarPersonajes() {
	    try (FileOutputStream fos = new FileOutputStream("personajes.ser");
	         ObjectOutputStream oos = new ObjectOutputStream(fos)) {
	        for(Personaje personaje : personajes) {
	        	oos.writeObject(personaje);
	        }
	        return true; 
	    } catch (IOException e) {
	        return false; 
	    }
	}
	public boolean cargarPersonajes() {
	    try (FileInputStream fis = new FileInputStream("personajes.ser");
	         ObjectInputStream ois = new ObjectInputStream(fis)) {
	        for(int i = 0; i < 3; i++) {
	        	Personaje personaje = (Personaje) ois.readObject();
	        	agregarPersonaje(personaje);
	        }
	        return true;
	    } catch (IOException | ClassNotFoundException e) {
	        return false; 
	    }    
	}*/
}
