public class BDcontrolador {
	private BDmodelo modelo;
	private BDvista vista;
	
	public BDcontrolador(BDmodelo modelo, BDvista vista) {
		this.modelo = modelo;
		this.vista = vista;
	}
	//Método para crear las TABLAS
	public void crearTablas() {
		modelo.crearTablas();
		vista.mostrarMensaje("Se crearon las tablas en la base de datos.");
	}
	//Métodos TABLA usuarios
	public void insertarUsuario(String nombre, String contrasenia) {
		if(nombre.isEmpty() || contrasenia.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(nombre, contrasenia)) {
				vista.mostrarMensaje("El usuario ya existe.");
			} else {
				modelo.insertarUsuario(nombre, contrasenia);
				vista.mostrarMensaje("Usuario agregado con éxito.");
			}
		}
	}
	public void actualizarUsuario(int id_usuario, String nombre, String contrasenia) {
		if(id_usuario <= 0 || nombre.isEmpty() || contrasenia.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(id_usuario)) {
				modelo.actualizarUsuario(id_usuario, nombre, contrasenia);
				vista.mostrarMensaje("Usuario actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el usuario.");
			}
		}
	}
	public void mostrarUsuario(int id_usuario) {
		if(id_usuario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(id_usuario)) {
				modelo.mostrarUsuario(id_usuario);
			} else {
				vista.mostrarMensaje("No se encontró el usuario.");
			}
		}
	}
	public void mostrarUsuario() {
		modelo.mostrarUsuario();
	}
	public void borrarUsuario(int id_usuario) {
		if(id_usuario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarUsuario(id_usuario)) {
				modelo.borrarUsuario(id_usuario);
				vista.mostrarMensaje("Usuario eliminado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el usuario.");
			}
		}
	}
	//Métodos TABLA personajes
	public void insertarPersonaje(String nombre, int vida, int ataque, int defensa, int alcance, int id_inventario) {
		if(nombre.isEmpty() || vida <= 0 || ataque <= 0 || defensa <= 0 || alcance <= 0 || id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(nombre, vida, ataque, defensa, alcance, id_inventario)) {
				modelo.insertarPersonaje(nombre, vida, ataque, defensa, alcance, id_inventario);
				vista.mostrarMensaje("Personaje agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}
		}
	}
	public void actualizarPersonaje(int id_personaje, String nombre, int vida, int ataque, int defensa, int alcance, int id_inventario) {
		if(id_personaje <= 0 || nombre.isEmpty() || vida <= 0 || ataque <= 0 || defensa <= 0 || alcance <= 0 || id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(id_personaje)) {
				modelo.actualizarPersonaje(id_personaje, nombre, vida, ataque, defensa, alcance, id_inventario);
				vista.mostrarMensaje("Personaje actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}
		}
	}
	public void mostrarPersonaje(int id_personaje) {
		if(id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(id_personaje)) {
				modelo.mostrarPersonaje(id_personaje);
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}
		}
	}
	public void mostrarPersonaje() {
		modelo.mostrarPersonaje();
	}
	public void borrarPersonaje(int id_personaje) {
		if(id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarPersonaje(id_personaje)) {
				modelo.borrarPersonaje(id_personaje);
				vista.mostrarMensaje("Personaje eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el personaje.");
			}	
		}
	}
	//Métodos TABLA enemigos
	public void insertarEnemigo(String nombre, int vida, int ataque, String tipo) {
		if(nombre.isEmpty() || vida <= 0 || ataque <= 0 || tipo.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(nombre, vida, ataque, tipo)) {
				modelo.insertarEnemigo(nombre, vida, ataque, tipo);
				vista.mostrarMensaje("Enemigo agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}		
	}
	public void actualizarEnemigo(int id_enemigo, String nombre, int vida, int ataque, String tipo) {
		if(id_enemigo <= 0 || nombre.isEmpty() || vida <= 0 || ataque <= 0 || tipo.isEmpty()) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(id_enemigo)) {
				modelo.actualizarEnemigo(id_enemigo, nombre, vida, ataque, tipo);
				vista.mostrarMensaje("Enemigo actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}
	}
	public void mostrarEnemigo(int id_enemigo) {
		if(id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(id_enemigo)) {
				modelo.mostrarEnemigo(id_enemigo);
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}
	}
	public void mostrarEnemigo() {
		modelo.mostrarEnemigo();
	}
	public void borrarEnemigo(int id_enemigo) {
		if(id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarEnemigo(id_enemigo)) {
				modelo.borrarEnemigo(id_enemigo);
				vista.mostrarMensaje("Enemigo eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el enemigo.");
			}
		}
	}
	//Métodos TABLA items
	public void insertarItem(String nombre, String tipo, String descripcion, int cantidad) {
		if(nombre.isEmpty() || tipo.isEmpty() || descripcion.isEmpty() || cantidad <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(nombre, tipo, descripcion, cantidad)) {
				modelo.insertarItem(nombre, tipo, descripcion, cantidad);
				vista.mostrarMensaje("Item agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}			
	}
	public void actualizarItem(int id_item, String nombre, String tipo, String descripcion, int cantidad) {
		if(id_item <= 0 || nombre.isEmpty() || tipo.isEmpty() || descripcion.isEmpty() || cantidad <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(id_item)) {
				modelo.actualizarItem(id_item, nombre, tipo, descripcion, cantidad);
				vista.mostrarMensaje("Item actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}
	}
	public void mostrarItem(int id_item) {
		if(id_item <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(id_item)) {
				modelo.mostrarItem(id_item);
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}
	}
	public void mostrarItem() {
		modelo.mostrarItem();
	}
	public void borrarItem(int id_item) {
		if(id_item <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarItem(id_item)) {
				modelo.borrarItem(id_item);
				vista.mostrarMensaje("Item eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el item.");
			}
		}
	}
	//Métodos TABLA inventarios
	public void insertarInventario(int id_personaje) {
		if(id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarInventario(id_personaje)) {
				modelo.insertarInventario(id_personaje);
				vista.mostrarMensaje("Inventario agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el inventario.");
			}
		}
	}
	public void actualizarInventario(int id_inventario, int id_personaje) {
		if(id_inventario <= 0 || id_personaje <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarInventario(id_personaje)) {
				modelo.actualizarInventario(id_inventario, id_personaje);
				vista.mostrarMensaje("Inventario actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el inventario.");
			}
		}
	}
	public void mostrarInventario(int id_inventario) {
		if(id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			modelo.mostrarInventario(id_inventario);
		}
	}
	public void mostrarInventario() {
		modelo.mostrarInventario();
	}
	public void borrarInventario(int id_inventario) {
		if(id_inventario <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			modelo.borrarInventario(id_inventario);
			vista.mostrarMensaje("Inventario eliminado con éxito");
		}
	} 
	//Métodos TABLA combates
	public void insertarCombate(String resultado, int id_personaje, int id_enemigo) {
		if(resultado.isEmpty() || id_personaje <= 0 || id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(resultado, id_personaje, id_enemigo)) {
				modelo.insertarCombate(resultado, id_personaje, id_enemigo);
				vista.mostrarMensaje("Combate agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	public void actualizarCombate(int id_combate, String resultado, int id_personaje, int id_enemigo) {
		if(id_combate <= 0 || resultado.isEmpty() || id_personaje <= 0 || id_enemigo <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(id_combate)) {
				modelo.actualizarCombate(id_combate, resultado, id_personaje, id_enemigo);
				vista.mostrarMensaje("Combate actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	public void mostrarCombate(int id_combate) {
		if(id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(id_combate)) {
				modelo.mostrarCombate(id_combate);
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	public void mostrarCombate() {
		modelo.mostrarCombate();
	}
	public void borrarCombate(int id_combate) {
		if(id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarCombate(id_combate)) {
				modelo.borrarCombate(id_combate);
				vista.mostrarMensaje("Combate eliminado con éxito");
			} else {
				vista.mostrarMensaje("No se encontró el combate.");
			}
		}
	}
	//Métodos TABLA turnos
	public void insertarTurno(String descripcion, int id_combate) {
		if(descripcion.isEmpty() || id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(descripcion, id_combate)) {
				modelo.insertarTurno(descripcion, id_combate);
				vista.mostrarMensaje("Turno agregado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}	
		}	
	}
	public void actualizarTurno(int id_turno, String descripcion, int id_combate) {
		if(id_turno <= 0 || descripcion.isEmpty() || id_combate <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(id_turno)) {
				modelo.actualizarTurno(id_turno, descripcion, id_combate);
				vista.mostrarMensaje("Turno actualizado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}
		}
	}
	public void mostrarTurno(int id_turno) {
		if(id_turno <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(id_turno)) {
				modelo.mostrarTurno(id_turno);
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}
		}
	}
	public void mostrarTurno() {
		modelo.mostrarTurno();
	}
	public void borrarTurno(int id_turno) {
		if(id_turno <= 0) {
			vista.mostrarMensaje("Debe ingresar los datos correctos y completos.");
		} else {
			if(modelo.buscarTurno(id_turno)) {
				modelo.borrarTurno(id_turno);
				vista.mostrarMensaje("Turno eliminado con éxito.");
			} else {
				vista.mostrarMensaje("No se encontró el turno.");
			}
		}
	}
	//Método para iniciar el programa
	public void guardarPartida() {
		
	}
}
